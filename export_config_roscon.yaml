metrics:
    STCYC:
        name: STCYC
        brief: Cyclomatic complexity
        description: 'Cyclomatic complexity is calculated as the number of decisions plus 1. High cyclomatic complexity indicates inadequate modularization or too much logic in one function. Software metric research has indicated that functions with a cyclomatic complexity greater than 10 tend to have problems related to their complexity.'
        histogram_num_bins: 9
        histogram_minval: 1
        histogram_maxval: 20
        histogram_title_xaxis: Cyclomatic complexity (STCYC)
        histogram_title_yaxis: Number of functions
        data_type: int 
        metric_type: function
    STLIN:    
        name: STLIN
        brief: Number of maintainable lines of code
        description: 'This is the total number of lines, including blank and comment lines, in a function definition between (but excluding) the opening and closing brace of the function body. It is computed on raw code. STLIN is undefined for functions which have #includeâ€™d code or macros which include braces in their definition.'
        histogram_num_bins: 10
        histogram_minval: 0
        histogram_maxval: 100
        histogram_title_xaxis: Number of maintainable lines of code (STLIN)
        histogram_title_yaxis: Number of functions
        data_type: int
        metric_type: function
    STPAR:    
        name: STPAR
        brief: Number of function parameters
        description: 'This metric is a count of the number of declared parameters for each function.'
        histogram_num_bins: 10
        histogram_minval: 0
        histogram_maxval: 10
        histogram_title_xaxis: Number of function parameters (STPAR)
        histogram_title_yaxis: Number of functions
        data_type: int
        metric_type: function
    STPTH:    
        name: STPTH
        brief: Estimated static path count
        description: 'This gives an upper bound on the number of possible paths in the control flow of the function. It is the number of non-cyclic execution paths in a function.'
        histogram_num_bins: 9
        histogram_minval: 1
        histogram_maxval: 20
        histogram_title_xaxis: Estimated static path count (STPTH)
        histogram_title_yaxis: Number of functions
        data_type: int
        metric_type: function
    STSUB:    
        name: STSUB
        brief: Number of Function Calls
        description: 'The number of function calls within a function. Functions with a large number of function calls are more difficult to understand because their functionality is spread across several components. Note that the calculation of STSUB is based on the number of function calls and not the number of distinct functions that are called.'
        histogram_num_bins: 10
        histogram_minval: 0
        histogram_maxval: 20
        histogram_title_xaxis: Number of function calls (STSUB)
        histogram_title_yaxis: Number of functions
        data_type: int      
        metric_type: function
    STCDN:    
        name: STCDN
        brief: Comment to code ratio
        description: 'This metric is defined to be the number of visible characters in comments divided by the number of visible characters outside comments. Comment delimiters are ignored. Whitespace characters in strings are treated as visible characters. A large metric value may indicate that there are too many comments - an attribute that can make a module difficult to read. A small value may indicate that there are not enough.'
        histogram_num_bins: 10
        histogram_minval: 0
        histogram_maxval: 2.0
        histogram_title_xaxis: Comment to code ratio (STCDN)
        histogram_title_yaxis: Number of files
        data_type: float  
        metric_type: file      
    STCBO:    
        name: STCBO
        brief: Coupling between objects
        description: 'This is a count of the number of methods (member functions) or member objects of other classes accessed by a class. Only classes outside the inheritance hierarchy are considered, because you would expect interaction with base and derived classes. Coupling to classes outside the inheritance tree should be viewed with suspicion as it makes the class less 4 independent and less re-usable.'
        histogram_num_bins: 10
        histogram_minval: 0
        histogram_maxval: 10
        histogram_title_xaxis: Coupling between objects (STCBO)
        histogram_title_yaxis: Number of classes 
        data_type: int 
        metric_type: class
    STDIT:    
        name: STDIT
        brief: Deepest level of inheritance
        description: 'This represents the number of derivations from the furthest base class down to this class. A high figure may indicate that the class depends on accumulated functionality, which makes understanding the class potentially difficult. This is one of the metrics defined by Chidamber & Kemerer.'
        histogram_num_bins: 10
        histogram_minval: 0
        histogram_maxval: 10
        histogram_title_xaxis: Deepest level of inheritance (STDIT)
        histogram_title_yaxis: Number of classes 
        data_type: int  
        metric_type: class
    STLCM:    
        name: STLCM
        brief: Lack of cohesion of methods within a class
        description: 'Methods within a class are partitioned into sets that access independent sets of member objects. The STLCM metric is a count of sets of unrelated members for a type.'
        histogram_num_bins: 10
        histogram_minval: 0
        histogram_maxval: 10 
        histogram_title_xaxis: Lack of cohesion of methods within a class (STLCM)
        histogram_title_yaxis: Number of classes
        data_type: int 
        metric_type: class
    STMTH:    
        name: STMTH
        brief: Number of methods available in class
        description: 'The number of methods declared within a class. This does not include methods declared in base classes. Classes with a large number of methods will be difficult to understand.'
        histogram_num_bins: 20
        histogram_minval: 0
        histogram_maxval: 20
        histogram_title_xaxis: Number of methods available in class (STMTH)
        histogram_title_yaxis: Number of classes
        data_type: int  
        metric_type: class
    STNOC:    
        name: STNOC
        brief: Number of immediate children
        description: 'This is the number of classes for which this class is an immediate base class. A high figure for
this metric indicates greater dependence on the functionality of this class, and more potential
knock-on effects from changes to it.'
        histogram_num_bins: 10
        histogram_minval: 0
        histogram_maxval: 10 
        histogram_title_xaxis: Number of immediate children (STNOC)
        histogram_title_yaxis: Number of classes
        data_type: int 
        metric_type: class
    STNOP:    
        name: STNOP
        brief: Number of immediate parents
        description: 'This metric indicates the number of inheritances for a class. Root base classes have a value of 0 while classes derived with a single inheritance have a value of 1. Classes that have multiple inheritance are prohibited by some programming standards.'
        histogram_num_bins: 10
        histogram_minval: 0
        histogram_maxval: 10 
        histogram_title_xaxis: Number of immediate parents (STNOP)
        histogram_title_yaxis: Number of classes
        data_type: int 
        metric_type: class
